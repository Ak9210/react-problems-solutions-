import React, { useState, useEffect } from 'react';

const CatCardsWithPagination = () => {
  const [cats, setCats] = useState([]);
  const [loading, setLoading] = useState(false);
  const [error, setError] = useState(null);
  const [page, setPage] = useState(1);

  const fetchCatData = async () => {
    setLoading(true);
    setError(null);
    try {
      const response = await fetch(`https://api.thecatapi.com/v1/images/search?limit=5&page=${page}&order=Desc`);
      const data = await response.json();
      setCats(data);
    } catch (err) {
      setError('Failed to fetch data');
    } finally {
      setLoading(false);
    }
  };

  useEffect(() => {
    fetchCatData();
  }, [page]);

  const handlePageChange = (newPage) => {
    setPage(newPage);
  };

  return (
    <div>
      <button onClick={fetchCatData}>Fetch Cat Images</button>

      {loading && <p>Loading...</p>}
      {error && <p>{error}</p>}
      {cats.length === 0 && !loading && !error && <p>No data available</p>}

      <div style={{ display: 'grid', gridTemplateColumns: 'repeat(3, 1fr)', gap: '10px' }}>
        {cats.map((cat) => (
          <div key={cat.id} style={{ border: '1px solid #ccc', padding: '10px' }}>
            <img src={cat.url} alt="Cat" style={{ width: '100%', height: 'auto' }} />
          </div>
        ))}
      </div>

      {/* Pagination Buttons */}
      <div style={{ marginTop: '20px' }}>
        <button onClick={() => handlePageChange(page - 1)} disabled={page === 1}>Previous</button>
        <button onClick={() => handlePageChange(page + 1)}>Next</button>
      </div>
    </div>
  );
};

export default CatCardsWithPagination;
